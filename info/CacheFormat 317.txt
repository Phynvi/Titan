Source: http://www.rune-server.org/runescape-development/rs2-client/help/275482-rs-317-cache-file-format.html
Author: Cup-o-cino 
Version: 317

the basic system works like this:
you have an index file and a data file.

first off, you open the index file.
the index file has entries which are 6 bytes in size.
to find the entry for the file you want, you do file_id * 6.
once you got to the position where the entry of that file is located, you read the six bytes like this:
Code:
 struct index{
    unsigned int_24 file_size; //tells you how big the size of the file in data is
    unsigned int_24 data_block_id; //tells you what initial block in the data file contains the data of the file that you want
 };
a datablock in the data file looks like this:
Code:
struct data_block
{
    unsigned short   next_file_id;  //file id of the next data block
    unsigned short   current_file_part_id;//tells you at what file part you are
    unsigned int_24  next_data_block_id;//tells you the id of the next data block
    unsigned char    next_filetype_id;     //tells you the next cachetype
    char                 data[512];            //some data of the file //byte in java
};
now that you know where the first data block is located, we can open the dat a file and find the appropiate position of the data_block, assuming that one data_block is 520 bytes, by doing the calculation, initial_data_block_id*520;

now we make an easy for loop, that loops through all 520byte data blocks, gets the 512 bytes of data, and puts it in our filebuffer that is the size that we found in the index file.

not actual working code.. just ane xample
Code:
int pos = 0;
int file_part_id;
for(file_part_id = 0; pos < file_size; ++file_part_id)
{ 
    pos  =  initial_datablock_id * 520;
    getdatablock at pos
    assert datablock.next_file_id == our_file_id;
    assert datablock.current_file_part_id == index.file_part_id;
    assert datablock.next_datablock_id == index.initial_datablock_id;
    assert datablock.file_type_id == cache_type;
    put the last 512 bytes in the buffer of our file.
    index.initial_data_block_id = datablock.next_datablock_id;
    
}
now we have the full file read, and we are ready to use it =3

here is a descent but not perfect cache reader I made : https://code.google.com/p/r317v1/source/browse/trunk/runescape%20nio%20client/src/rs/io/fs/FileSystem.java